% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PhenoGeneRankerFunctions.R
\name{RandomWalkRestarts}
\alias{RandomWalkRestarts}
\title{Random Walk Restarts}
\usage{
RandomWalkRestarts(
  walk_Matrix,
  geneSeeds,
  phenoSeeds,
  generatePValue = TRUE,
  numCores = 1,
  r = 0.7,
  eta = 0.5
)
}
\arguments{
\item{walk_Matrix}{This is the walk matrix that gets generated by the method CreateWalkMatrix.}

\item{geneSeeds}{This is a vector for storing the names of the genes you would like to use in the ranking process.
PhenoGeneRanker ranks the genes and phenotypes starting from gene nodes. 
These are called gene seeds. The final ranks show the proximity of the genes to the seed genes.}

\item{phenoSeeds}{This is a vector for storing the names of the phenotypes you would like to use in the ranking process.
PhenoGeneRanker ranks the genes and phenotypes starting from phenotype nodes. 
These are called phenotype seeds. The final ranks show the proximity of the phenotypes to the seed phenotypes.}

\item{generatePValue}{If this is TRUE, The method will run additional code in order to generate the probability values for each of the gene rankings.
If it is FALSE then the method will only return the rankings of the genes.}

\item{numCores}{This is the number of cores used for parallel processing.}

\item{r}{This parameter controls the global restart probability.}

\item{eta}{This parameter controls the individual networks restart probability.}

\item{tau}{This is a vector that stores weights for each of the 'gene' input files that were added in CreateWalkMatrix.
Each index of the vector corresponds to the order of the files in your input file. They must sum up to the same number of gene files you added.
If you want to have each file equally weighted, you do not need to input this vector to the parameters of this method.}

\item{phi}{This is a vector that stores weights for each of the 'phenotype' input files that were added in CreateWalkMatrix.
Each index of the vector corresponds to the order of the files in your input file. They must sum up to the same number of phenotype files you added.
If you want to have each file equally weighted, you do not need to input this vector to the parameters of this method.}
}
\value{
If the parameter generatePValue is TRUE, then this method returns a data frame with the top 100 ranked p-values.
There are three columns for the gene name, score, p-value. If generatePValue is FALSE, then it creates a data frame of
all of the genes ranked. It has a column of the rank, gene name, and steady state scores for each gene or phenotype.
}
\description{
This method runs the random walk with restarts on the provided walkmatrix transition matrix of multiplex heterogeneous networks. 
When random walk converges to steady state then the random walk stops. It returns a dataframe including gene and phenotype names, ranks 
and steady state scores of the genes and phenotypes. If generatePvalue is TRUE then it generates p-values along with the ranks with respect 
to offset value of 100.
}
\examples{
##RWR <- RandomWalkRestarts(walkMatrix, c('gene1', 'gene2'), c(), TRUE)
##RWR <- RandomWalkRestarts(CreateWalkMatrix('myFile.txt'),c('gene1'), c('phenotype1', 'phenotype2'), FALSE)
##RWR <- RandomWalkRestarts(CreateWalkMatrix('myFile.txt'),c('gene1'), c(), FALSE, 12, 0.7, 0.6, â€œtauâ€=(1,0.5,1.5), â€œphiâ€=(1,0.5,1.5
}
