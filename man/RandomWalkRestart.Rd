% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PhenoGeneRankerFunctions.R
\name{RandomWalkRestart}
\alias{RandomWalkRestart}
\alias{tau}
\alias{This}
\alias{is}
\alias{a}
\alias{vector}
\alias{that}
\alias{stores}
\alias{weights}
\alias{for}
\alias{each}
\alias{of}
\alias{the}
\alias{'gene'}
\alias{input}
\alias{files}
\alias{were}
\alias{added}
\alias{in}
\alias{CreateWalkMatrix.}
\alias{Each}
\alias{index}
\alias{corresponds}
\alias{to}
\alias{order}
\alias{your}
\alias{file.}
\alias{The}
\alias{must}
\alias{sum}
\alias{up}
\alias{same}
\alias{number}
\alias{gene}
\alias{you}
\alias{added.}
\alias{If}
\alias{want}
\alias{have}
\alias{file}
\alias{equally}
\alias{weighted,}
\alias{do}
\alias{not}
\alias{need}
\alias{this}
\alias{parameters}
\alias{method.}
\alias{phi}
\alias{'phenotype'}
\alias{phenotype}
\title{Random Walk Restart}
\usage{
RandomWalkRestart(
  walk_Matrix,
  geneSeeds,
  phenoSeeds,
  generatePValue = TRUE,
  numCores = 1,
  r = 0.7,
  eta = 0.5
)
}
\arguments{
\item{walk_Matrix}{This is the walk matrix that gets generated by the method
CreateWalkMatrix.}

\item{geneSeeds}{This is a vector for storing the names of the genes you
would like to use in the ranking process. PhenoGeneRanker ranks the genes
and phenotypes starting from gene nodes. These are called gene seeds. The
final ranks show the proximity of the genes to the seed genes.}

\item{phenoSeeds}{This is a vector for storing the names of the phenotypes
you would like to use in the ranking process. PhenoGeneRanker ranks the
genes and phenotypes starting from phenotype nodes. These are called
phenotype seeds. The final ranks show the proximity of the phenotypes to
the seed phenotypes.}

\item{generatePValue}{If this is TRUE, The method will run additional code in
order to generate the probability values for each of the gene rankings. If
it is FALSE then the method will only return the rankings of the genes.}

\item{numCores}{This is the number of cores used for parallel processing.}

\item{r}{This parameter controls the global restart probability.}

\item{eta}{This parameter controls the individual networks restart
probability.}
}
\value{
If the parameter generatePValue is TRUE, then this method returns a
  data frame with the top 100 ranked p-values. There are three columns for
  the gene name, score, p-value. If generatePValue is FALSE, then it creates
  a data frame of all of the genes ranked. It has a column for the gene
  names, and steady state scores for each gene or phenotype.
}
\description{
This method runs the random walk with restart on the provided
  walk matrix. When random walk converges to steady-state then the random
  walk stops. It returns a data frame including ranked genes and phenotypes,
  and steady-state scores of the genes and phenotypes. If generatePvalue is
  TRUE then it generates p-values along with the ranks with respect to offset
  value of 100.
}
\examples{
\dontrun{
RWR <- RandomWalkRestart(walkMatrix, c('gene1', 'gene2'), c(), TRUE)
RWR <- RandomWalkRestart(CreateWalkMatrix('myFile.txt'),c('gene1'), 
       c('phenotype1', 'phenotype2'), FALSE)
RWR <- RandomWalkRestart(CreateWalkMatrix('myFile.txt'),c('gene1'), c(), 
       TRUE, 12, 0.7, 0.6, â€œtauâ€=(1,0.5,1.5), â€œphiâ€=(1,0.5,1.5))
}
}
